[general]
# This is the path and file name of where the SM's log file is stored.
# required; default: sm.log string
log_file=sm.log

# This is the name of a server running a log server. The supported implementation is available from here:
# http://code.activestate.com/recipes/577025-loggingwebmonitor-a-central-logging-server-and-mon/
# hostname of where the log server is running at
graylog_api=
graylog_port=

# Use either "so_manager", "openbaton" or "openstack" here
manager=openstack
#openstack
#so_manager

[service_manager]
# This is the location where the service orchestrator bundle is located
# optional; local file system path string
# TODO if not present the SM will look for a filename bundle/data/service_manifest.json
manifest=/Users/puenktli/Documents/Coding/PycharmProjects/HaaS/bundle/data/service_manifest.json
#manifest=/home/ubuntu/disco/bundle/data/service_manifest.json
# This is the location where the service orchestrator bundle is located
# required; local file system path string
#bundle_location=amnion/haas:latest

# This is the location of a public key that will be registered with the CloudController.
# It MUST have a matching private key known to the local SSH sub-system.
# required; local file system path string
#ssh_key_location=/Users/andy/Source/MCN/Source/sm/etc/ssh_key.pub

# This is the endpoint where the keystone service runs
# required; default: http://localhost:35357/v2.0; a URL string
#design_uri=https://engines.switch.ch:35357/v2.0
design_uri=https://keystone.cloud.switch.ch:5000/v2.0
#design_uri=http://lisa.cloudcomplab.ch:35357/v2.0

# This file contains configuration parameters that should be set from the SM
# to the SO during different phases of the instantiation process. These parameters
# should not be returned to a EEU
#service_params=/Users/andy/Source/MCN/Source/sm/etc/service_params.json
service_params=/Users/puenktli/Documents/Coding/PycharmProjects/HaaS/bundle/data/service_params.json

[service_manager_admin]
# This enables service registration with keystone
# required; values: {True | False}
register_service=False

# This is the token that the registration should be doe with
# required if registration enabled; a service token string
service_token=<keystone token>

# This is the tenant name that the registration should be doe with
# required if registration enabled; a tenant name string
service_tenant_name=<keystone tenant>

# This is the OpenStack Region where the service will be available
# optional; default: RegionOne, a string
region=RegionOne

[cloud_controller]
# This is the enpoint where the cloud controller service runs
# required; default: http://localhost:8888; a URL string
nb_api=http://cc.cloudcomplab.ch:8889
nb_admin_api=http://cc.cloudcomplab.ch:8081
user=demo
pwd=LU4JiFJSuL0H3r5bCJ1A3A

# connection retries: time to wait between attempts
wait_time=5000

# connection retries: number of retries to make
max_attempts=20

[mongo]
#host=localhost
#can be [username:password@]host1 for password auth

[openstackso]
# heat endpoint including tenant ID on OpenStack
#heat_endpoint=http://lisa.cloudcomplab.ch:8004/v1/72582e3c823e4fddb9c4e334d21a4d72
heat_endpoint=https://api.zhdk.cloud.switch.ch:8004/v1/8fcf0992e82943089de7dabe728b78fa

# tenant's username for deployment of SO in OpenStack VM
#tenantname=mesz
tenantname=mesz@zhaw.ch
#saverio.proto@switch.ch

# git address to clone for the SO
sogitaddress=https://github.com/Pentadactylus/testso.git

# path to execute the application within the git repo cloned
soapplication=~/testso/bundle/wsgi/application

# image name to take as base image for the SO's VM (should be some Ubuntu
# derivative)
#sovmimagename=Ubuntu-Trusty-Tahr-14.04.2-LTS
sovmimagename=Ubuntu Trusty 14.04 (SWITCHengines)

# flavor of the VM where the SO should be deployed on (the above image needs to
# fit into that flavor)
#sovmflavor=m1.tiny
sovmflavor=c1.micro

# SSH public key to insert into the SO's VM (only for debugging purposes)
sovmsshpublickey=MNMBA

# name of the external network within OpenStack
networkexternal=public
#networkexternal=external-net
